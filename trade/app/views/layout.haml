!!!

%html(xmlns="http://www.w3.org/1999/xhtml")
  %head
    %meta(http-equiv="Content-type" content="text/html;charset=UTF-8")

    %link(rel="icon" href="/images/logo/TradingSystemIcon.png" type="image/png")

    %title Trading System - JOKR by #1

    - if defined? css
      %link(rel="stylesheet" href="/css/#{css}" type="text/css")
    - else
      %link(rel="stylesheet" href="/css/new_style.css" type="text/css")

    %link(rel="stylesheet" href="/css/lightbox.css" type="text/css")
    %link(rel="stylesheet" href="/css/countdown.css" type="text/css")
    %link(rel="stylesheet" href="/css/jquery-ui-1.9.2.custom.min.css" type="text/css")
    %link(rel="stylesheet" href="/css/jquery-ui-timepicker-addon.css" type="text/css")

    %script(type="text/javascript" src="/js/jquery-1.8.3.min.js")
    %script(type="text/javascript" src="/js/jquery-ui-1.9.2.custom.min.js")
    %script(type="text/javascript" src="/js/jquery-ui-timepicker-addon.js")
    %script(type="text/javascript" src="/js/jquery.countdown.min.js")
    %script(type="text/javascript" src="/js/lightbox.js")
    %script(type="text/javascript" src="/js/jquery.autocomplete.js")
    - if defined?(script)
      %script(type="text/javascript" src="/java-script/#{script}")
    %script(type="text/javascript")
      currentTime = new Date();
      minimumDate = new Date(currentTime.getTime() + 1*60000);
      $(function() {$( "#end_time" ).datetimepicker({dateFormat: 'dd.mm.yy', minDate: minimumDate, changeMonth: true, changeYear: true, firstDay: 1});});
  %body{ defined?(onload) ? {:onload => "#{onload}"} : "" }
    %div(id="container")
      - auth = session[:auth] ? "yes" : "no"
      - user = session[:auth] ? session[:user] : "none"
      - account = session[:auth] ? session[:account] : "none"
      - admin_view = Models::System.instance.fetch_account(session[:account]).is_admin?(Models::System.instance.fetch_account(session[:user])) if auth == "yes" && session[:account] != session[:user]
      - navigation = Navigations.instance.get(session[:navigation][:context])

      = haml :'frame/header', :locals =>  {  :auth => auth,
                                      :user => user,
                                      :account => account,
                                      :navigation => navigation }

      = haml :'frame/profile_information', :locals => {  :user => session[:user],
                                                         :account => session[:account] }  if session[:auth]

      = haml :'frame/message_info' if  session[:auth]

      = haml :'frame/subnavigation', :locals => { :auth => session[:auth],
                                                  :navigation => navigation }

      %div(id="main")
        -unless session[:alert].nil?
          %div{ :id => "message", :class => session[:alert].error? ? "error" : "success" }
            - unless session[:alert].title == ""
              %div
                %strong
                  = "#{session[:alert].title}"
            = "#{session[:alert].message}"
        - session[:alert] = nil
        = yield
      = render_file('frame/footer.haml')